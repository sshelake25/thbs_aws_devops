apiVersion: v1
kind: Pod
metadata:
  name: label-demo1
  labels:
    environment: prod
    app: nginx
spec:
  containers:
  - name: nginx
    image: nginx
    ports:
    - containerPort: 80

# ------------------------------

apiVersion: v1
kind: Pod
metadata:
  name: label-demo2
  labels:
    environment: test
    app: apache
spec:
  containers:
  - name: apache
    image: httpd
    ports:
    - containerPort: 80

# equality based filters
https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/

#AND conditon in eqauty
kubectl get pods -l environment=test,app=apache

#AND conditon in eqauty
kubectl get pods -l environment=test,app=apache

# AND in set based
kubectl get pods -l 'environment in (production),tier in (frontend)'

As already mentioned set-based requirements are more expressive.  For instance, they can implement the OR operator on values:
kubectl get pods -l 'environment in (production, qa)'